const employees = [
    { name: "–î–∏–º–∞ –ì.", greeting: "–õ–µ–Ω—á–∏–∫, –•–æ—á—É –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å —Ç–µ–±—è —Å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º —Å —Ç–≤–æ–∏–º –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏–µ–º. –ñ–µ–ª–∞—é –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, –≤–µ–¥—å –æ–Ω–æ —Å–µ–π—á–∞—Å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ, —É—Å–ø–µ—Ö–æ–≤ –≤ –∫–∞—Ä—å–µ—Ä–µ. –ò –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –∂–µ–Ω—Å–∫–æ–≥–æ —Å—á–∞—Å—Ç—å—è. –ü—É—Å—Ç—å –≤—Å–µ —Ç–≤–æ–∏ –º–µ—á—Ç—ã —Å–±—ã–≤–∞—é—Ç—Å—è –∏ –≤—Å–µ —Ü–µ–ª–∏ –¥–æ—Å—Ç–∏–≥–∞—é—Ç—Å—èü•∞üî•‚ù§Ô∏è", character: 1, long: true },
    { name: "–ù–∏–∫–∏—Ç–∞", greeting: "–° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! –ü—É—Å—Ç—å —Ç–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å—Å—è–∫–∞–µ—Ç!", character: 2 },
    { name: "–ò—Ä–∞ –ö.", greeting: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ª–∏–¥–µ—Ä –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã!", character: 3 },
    { name: "–ê–ª—è", greeting: "–ï–ª–µ–Ω–∞, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è —Å –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! –ñ–µ–ª–∞—é —Ç–µ–±–µ: –µ—Å–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ—Å—Ç–µ–π -- —Ç–æ –ø—Ä–∏—è—Ç–Ω—ã—Ö! –ï—Å–ª–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π -- —Ç–æ –≤–µ—Å—ë–ª—ã—Ö! –ï—Å–ª–∏ —É—Å—Ç–∞–ª–æ—Å—Ç–∏ -- —Ç–æ –æ—Ç –ª—é–±–∏–º—ã—Ö –¥–µ–ª! –ê –µ—Å–ª–∏ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏—è -- —Ç–æ –æ—Ç –ª—é–±–≤–∏! –ë—É–¥—å —Å—á–∞—Å—Ç–ª–∏–≤–∞!", character: 4, long: true },
    { name: "–î–∏–º–∞ –°.", greeting: "–õ–µ–Ω–∞, —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è! –Ø –Ω–µ –±—É–¥—É —Ç–µ–±–µ –±–∞–Ω–∞–ª—å–Ω–æ –∂–µ–ª–∞—Ç—å –∑–¥–æ—Ä–æ–≤—å—è, —Å—á–∞—Å—Ç—å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –¥–∞–∂–µ —É –ª—é–¥–µ–π –Ω–∞ –¢–∏—Ç–∞–Ω–∏–∫–µ –±—ã–ª–∏ –∏ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –±–æ–≥–∞—Ç—Å—Ç–≤–æ –∏ —Ö–æ—Ä–æ—à–∞—è –∂–∏–∑–Ω—å, –Ω–æ –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ—Ç –Ω–∏—Ö –æ—Ç–≤–µ—Ä–Ω—É–ª–∞—Å—å —É–¥–∞—á–∞, —Ç–∞–∫ –≤–æ—Ç, –∂–µ–ª–∞—é, —á—Ç–æ–±—ã –æ—Ç —Ç–µ–±—è —É–¥–∞—á–∞ –Ω–∏–∫–æ–≥–¥–∞ –≤ –∂–∏–∑–Ω–∏ –Ω–µ –æ—Ç–≤–æ—Ä–∞—á–∏–≤–∞–ª–∞—Å—å! –ï—â—ë —Ä–∞–∑ —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–ºüíô", character: 5, long: true },
    { name: "–≠–ª—è", greeting: "–õ–µ–Ω–∞, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è! –ü—É—Å—Ç—å –≤—Å–µ –ø–ª–∞–Ω—ã —Ç–≤–æ–∏ —Å–±—ã–≤–∞—é—Ç—Å—è, –∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞–ª–∏ —ç—Ç–æ–º—É. –ü—É—Å—Ç—å –±—É–¥–µ—Ç –≤—Å—ë, –æ —á–µ–º –∂–µ–ª–∞–µ—à—å, –∏ —Å—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ —Ö–æ—á–µ—Ç—Å—è üíê –° –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º!", character: 6 },
    { name: "–ú–∏—à–∞", greeting: "–õ–µ–Ω–∞, —Å –î–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è! –°–∞–º—ã–π –ª—É—á—à–∏–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∏ –ø—Ä–æ—Å—Ç–æ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–π –∏ –¥–æ–±—Ä—ã–π —á–µ–ª–æ–≤–µ–∫. –ö–∞–∫ –∏ –≤—Å–µ –∂–µ–ª–∞—é —Å—á–∞—Å—Ç—å—è,–∑–¥–æ—Ä–æ–≤—å—è –∏ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ, –∏ –∑–Ω–∞–π, 12 –∏–∑ 19 —ç—Ç–æ –±–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã)", character: 7, long: true },
    { name: "–ê–Ω–¥—Ä–µ–π", greeting: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! –ü–æ–∂–µ–ª–∞—Ç—å –º–æ–≥—É –≤–µ—Å–µ–ª—å—è, –±–æ–ª—å—à–µ —Ä–∞–¥–æ—Å—Ç–∏, –≤–µ–∑–µ–Ω–∏—è. –ë—É–¥—å —Å—á–∞—Å—Ç–ª–∏–≤–æ–π –∏ –∑–¥–æ—Ä–æ–≤–æ–π, –æ—Å—Ç–∞–≤–∞–π—Å—è —Å–∞–º–æ–π —Å–∞–º–æ–π! üéâü•≥", character: 8 },
    { name: "–ò–ª—å—è", greeting: "–õ–µ–Ω–∞, —Å –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! –ü–æ –∫–ª–∞—Å—Å–∏–∫–µ, —Å—á–∞—Å—Ç—å—è-–∑–¥–æ—Ä–æ–≤—å—è –∂–µ–ª–∞—é, —á—Ç–æ–±—ã –≤—Å—ë –∑–∞–¥—É–º–∞–Ω–Ω–æ–µ –ø–æ–ª—É—á–∞–ª–æ—Å—å –∏ –º–µ—á—Ç—ã —Å–±—ã–≤–∞–ª–∏—Å—å. –ú–æ—Ä–µ —Ä–∞–¥–æ—Å—Ç–∏ –∏ –ø–æ–∑–∏—Ç–∏–≤–∞, –∏ —á—Ç–æ–±—ã –≤—Å—é –∂–∏–∑–Ω—å —Ç–µ–±—è —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–ª–∞ —Ñ–æ—Ä—Ç—É–Ω–∞. –í—Å–µ—Ö –±–ª–∞–≥ –∏ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ. –° —Ç–≤–æ–∏–º –¥–Ω—ë–ºü•≥üéâ", character: 9, long: true },
    { name: "–¢–∏–º–∞", greeting: "–õ–µ–Ω–∞, —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è! –í —ç—Ç—É –Ω–æ—á—å, –∫–æ–≥–¥–∞ —Å–≤–µ—á–∏ –º–µ—Ä—Ü–∞—é—Ç –Ω–∞ —Ç–æ—Ä—Ç–µ, –∞ –≤–æ–∫—Ä—É–≥ —Ü–∞—Ä–∏—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞, –ø–æ–º–Ω–∏: –≤ –º–∏—Ä–µ –ø–æ–ª–Ω–æ —Ç–∞–π–Ω –∏ –∑–∞–≥–∞–¥–æ–∫. –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π —Ç–≤–æ–π —à–∞–≥ –±—É–¥–µ—Ç –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º, –≤–µ–¥—å –¥–∞–∂–µ –≤ —Å–∞–º—ã—Ö –æ–±—ã—á–Ω—ã—Ö –≤–µ—â–∞—Ö –º–æ–∂–µ—Ç —Å–∫—Ä—ã–≤–∞—Ç—å—Å—è –Ω–µ—á—Ç–æ –∑–ª–æ–≤–µ—â–µ–µ. –ñ–µ–ª–∞—é, —á—Ç–æ–±—ã —Ç–≤–æ–∏ —Å–∏–ª—ã –±—ã–ª–∏ –∫—Ä–µ–ø–∫–∏–º–∏, –∞ –∏–Ω—Ç—É–∏—Ü–∏—è -- –æ—Å—Ç—Ä–æ–π, –∫–∞–∫ –ª–µ–∑–≤–∏–µ –Ω–æ–∂–∞. –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π —Ç–≤–æ–π –¥–µ–Ω—å –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π, –Ω–æ –ø–æ–º–Ω–∏: –æ–ø–∞—Å–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç –ø–æ–¥–∂–∏–¥–∞—Ç—å –∑–∞ –∫–∞–∂–¥—ã–º —É–≥–ª–æ–º. –õ–µ–Ω–∞, –∏ –ø—É—Å—Ç—å —É–¥–∞—á–∞ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!", character: 10, long: true },
    { name: "–ò—Ä–∞ –®.", greeting: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è! –ü—É—Å—Ç—å —Å–±—ã–≤–∞—é—Ç—Å—è –º–µ—á—Ç—ã, –ø—É—Å—Ç—å –≤—Å—ë –≤–æ–∫—Ä—É–≥ —Ä–∞–¥—É–µ—Ç —Ç–µ–±—è, –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Å–∞–º—ã–µ —è—Ä–∫–∏–µ —ç–º–æ—Ü–∏–∏! –ñ–µ–ª–∞—é –ø—Ä–∏—è—Ç–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π, —Å–∞–º—ã—Ö –ª—É—á—à–∏—Ö –ª—é–¥–µ–π –Ω–∞ —Ç–≤–æ–µ–º –∂–∏–∑–Ω–µ–Ω–Ω–æ–º –ø—É—Ç–∏ –∏ –º–æ—Ä–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç –≤—Å–µ–≥–æ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å!", character: 11, long: true },
    { name: "–í–∏—Ç–∞–ª—è", greeting: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! –ù–æ–≤—ã—Ö –≤—ã—Å–æ—Ç –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π!", character: 12 },
    { name: "–ì–ª–µ–±", greeting: "–î–æ—Ä–æ–≥–∞—è –õ–µ–Ω–∞! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è üéâüéâüéâ –í –∂–∏–∑–Ω–∏ —Ç–æ–ª—å–∫–æ —Ä–∞–¥–æ—Å—Ç–∏, —Å—á–∞—Å—Ç—å—è, –ª—é–±–æ–≤–∏ –∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ —Ç–µ–ø–ª—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤. –ú—ã —Ç–µ–±—è –ª—é–±–∏–º!", character: 13 },
    { name: "–í–∏–∫–∞", greeting: "–ö—É–ª–µ—à–∫–∞, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! –û—Å—Ç–∞–≤–∞–π—Å—è —Ç–∞–∫–æ–π –∂–µ –∫—Ä–∞—Å–∏–≤–æ–π, –¥–æ–±—Ä–æ–π, –≤–µ—Å—ë–ª–æ–π –∏ –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω–æ–π, –Ω–∞–¥–µ—é—Å—å —É–≤–∏–¥–∏–º—Å—è –Ω–∞ —Å–ª—ë—Ç–µ –∏ –Ω–∞–ø—å—ë–º—Å—è –ø–∏–≤–∞, –ª—é–±–ª—é‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è", character: 14, long: true }
];

const loadingScreen = document.querySelector('.loading-screen');
const startButton = document.querySelector('.start-button');
const mainScreen = document.querySelector('.main-screen');
const greetingText = document.querySelector('.greeting-text');
const characters = document.querySelectorAll('.character');
const cardsContainer = document.querySelector('.cards-container');
const swiperWrapper = document.querySelector('.swiper-wrapper');
const overlay = document.querySelector('.overlay');

function typeText(element, text, speed = 50) {
    let i = 0;
    element.textContent = '';
    element.style.opacity = 1;

    function type() {
        if (i < text.length) {
            element.textContent += text.charAt(i);
            i++;
            setTimeout(type, speed);
        }
    }

    type();
}

function launchFireworks(x, y) {
    confetti({
        particleCount: 350,
        spread: 100,
        origin: { x, y },
        shapes: ['heart', 'circle'],
        colors: ['#ff0000', '#ff69b4', '#ff1493', '#FFC0CB'],
        scalar: 1.5
    });

    setTimeout(() => {
        confetti({
            particleCount: 250,
            spread: 120,
            origin: { x: x - 0.1, y: y - 0.1 },
            colors: ['#FFD700', '#FFA500', '#FF4500', '#ffffff']
        });
    }, 200);

    setTimeout(() => {
        confetti({
            particleCount: 300,
            spread: 90,
            origin: { x: x + 0.1, y: y - 0.05 },
            colors: ['#00BFFF', '#1E90FF', '#4169E1', '#ffffff', '#ADFF2F']
        });
    }, 400);
}

function init() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–∞–π–¥–µ—Ä–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    let swiper = null;
    
    function checkWindowSize() {
        const isMobile = window.innerWidth <= 600;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å —Å–ª–∞–π–¥–µ—Ä
        if (isMobile && !swiper) {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–∞–π–¥–µ—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω
            setTimeout(() => {
                swiper = new Swiper('.swiper', {
                    slidesPerView: 1.2,
                    spaceBetween: 30,
                    centeredSlides: true,
                    loop: true,
                    autoplay: {
                        delay: 3000,
                        disableOnInteraction: false,
                    },
                    pagination: {
                        el: '.swiper-pagination',
                        clickable: true,
                        dynamicBullets: true,
                    },
                    effect: 'coverflow',
                    coverflowEffect: {
                        rotate: 0,
                        stretch: 0,
                        depth: 100,
                        modifier: 1,
                        slideShadows: false,
                    },
                });
            }, 100);
        } else if (!isMobile && swiper) {
            // –ï—Å–ª–∏ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø –∏ —Å–ª–∞–π–¥–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –µ–≥–æ
            swiper.destroy(true, true);
            swiper = null;
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    checkWindowSize();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    window.addEventListener('resize', checkWindowSize);

    startButton.addEventListener('click', () => {
        loadingScreen.style.opacity = '0';
        loadingScreen.style.transform = 'translateY(-100%)';
        setTimeout(() => {
            loadingScreen.style.display = 'none';
            mainScreen.style.opacity = '1';
            typeText(greetingText, '–° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è, –õ–µ–Ω–∞!');
            checkWindowSize(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–ª–∞–π–¥–µ—Ä–∞
        }, 500);
    });

    employees.forEach((employee) => {
        const imagePath = `./LENA/img/${employee.character}.png`;

        // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–æ–≤ (grid layout)
        const card = document.createElement('div');
        card.className = 'employee-card desktop-card';

        const messageClass = employee.long ? 'greeting-message long-message' : 'greeting-message';

        card.innerHTML = `
            <div class="card-inner">
                <div class="card-front">
                    <img class="employee-image" src="${imagePath}" alt="${employee.name}">
                    <div class="employee-name">${employee.name}</div>
                </div>
                <div class="card-back">
                    <div class="${messageClass}">${employee.greeting}</div>
                    <img class="employee-avatar" src="${imagePath}" alt="${employee.name}">
                    <button class="thank-you-btn">–° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è!</button>
                </div>
            </div>
        `;
        cardsContainer.appendChild(card);

        // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞
        const slide = document.createElement('div');
        slide.className = 'swiper-slide';
        slide.innerHTML = `
            <div class="employee-card mobile-card">
                <div class="card-inner">
                    <div class="card-front">
                        <img class="employee-image" src="${imagePath}" alt="${employee.name}">
                        <div class="employee-name">${employee.name}</div>
                    </div>
                    <div class="card-back">
                        <div class="${messageClass}">${employee.greeting}</div>
                        <img class="employee-avatar" src="${imagePath}" alt="${employee.name}">
                        <button class="thank-you-btn">–°–ø–∞—Å–∏–±–æ!</button>
                    </div>
                </div>
            </div>
        `;
        swiperWrapper.appendChild(slide);

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –Ω–∞–∫–ª–æ–Ω –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
        const rotation = Math.random() * 10 - 5;
        card.style.transform = `rotate(${rotation}deg)`;
    });

    document.querySelectorAll('.employee-card').forEach(card => {
        card.addEventListener('click', () => {
            if (!card.classList.contains('flipped')) {
                card.classList.add('flipped');
                overlay.classList.add('active');
            }
        });

        const thankButton = card.querySelector('.thank-you-btn');
        if (thankButton) {
            thankButton.addEventListener('click', (e) => {
                e.stopPropagation();
                const rect = thankButton.getBoundingClientRect();
                const x = (rect.left + rect.right) / 2 / window.innerWidth;
                const y = (rect.top + rect.bottom) / 2 / window.innerHeight;

                launchFireworks(x, y);

                setTimeout(() => {
                    card.classList.remove('flipped');
                    overlay.classList.remove('active');
                }, 1500);
            });
        }
    });

    overlay.addEventListener('click', () => {
        document.querySelectorAll('.employee-card.flipped').forEach(card => {
            card.classList.remove('flipped');
        });
        overlay.classList.remove('active');
    });

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && document.querySelector('.employee-card.flipped')) {
            document.querySelectorAll('.employee-card.flipped').forEach(card => {
                card.classList.remove('flipped');
            });
            overlay.classList.remove('active');
        }
    });
}

document.addEventListener('DOMContentLoaded', init);
